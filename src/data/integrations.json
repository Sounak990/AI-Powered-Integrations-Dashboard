{
    "openapi": "3.1.0",
    "info": {
		"title": "Chainwide RAG API",
		"version": "1.0.0",
		"description": "Welcome to Chainwide's API documentation. Chainwide provides advanced Retrieval-Augmented Generation (RAG) agents that can seamlessly connect with various data sources.\n\nOur API is organized around three main components:\n\n1. **Integrations**: Manage your data source connections (e.g., Salesforce, documents) that serve as knowledge bases for your RAG agents.\n\n2. **Connections**: Configure and build your RAG implementations by combining your integrated data sources with advanced LLM configurations.\n\n3. **RAG Agents**: Interact with your configured RAG agents through our chat interface, leveraging the power of AI enhanced with your integrated knowledge bases.\n\nThis API enables you to programmatically create, manage, and interact with your RAG implementations, making it easy to build intelligent, context-aware applications.",
		"contact": {
			"name": "Chainwide Support",
			"url": "https://chainwide.io",
			"email": "support@chainwide.io"
		}
	},
    "servers": [
        {
            "url": "https://api.dev.chainwide.io"
        }
    ],
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "description": "Enter your API key with the 'CW-' prefix"
            }
        }
    },
    "security": [
        {
            "bearerAuth": []
        }
    ],
    "paths": {
        "/api/integrations/create_integration_type_1": {
            "post": {
                "summary": "Create Type 1 Integration",
                "description": "Creates a new integration of type 1, typically involving OAuth credentials for services like Salesforce.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "client_id": {
                                        "type": "string",
                                        "description": "OAuth client ID provided by the integration provider (e.g., Salesforce Consumer Key)."
                                    },
                                    "client_secret": {
                                        "type": "string",
                                        "description": "OAuth client secret provided by the integration provider (e.g., Salesforce Consumer Secret)."
                                    },
                                    "provider": {
                                        "type": "string",
                                        "description": "The integration provider name (e.g., 'salesforce').",
                                        "enum": ["salesforce"]
                                    },
                                    "tenant_id": {
                                        "type": "string",
                                        "description": "Your unique tenant identifier."
                                    },
                                    "integration_name": {
                                        "type": "string",
                                        "description": "A friendly name for your integration (e.g., 'Production Salesforce')."
                                    },
                                    "integration_description": {
                                        "type": "string",
                                        "description": "A brief description of the integration's purpose."
                                    }
                                },
                                "required": [
                                    "client_id",
                                    "client_secret",
                                    "provider",
                                    "tenant_id",
									"integration_name"
                                ]
                            },
                            "example": {
                                "client_id": "3MVG9JJwBBbcN47I2GmNC_sfzj2HZ2ONbM7TXOyn57clgpu_I2HzNdbK4wMOZLiYwdIMjeGRzyGkzm94APp4u",
                                "client_secret": "",
                                "provider": "salesforce",
                                "tenant_id": "11507a0e2f5e",
                                "integration_name": "Production Salesforce",
                                "integration_description": "Main Salesforce integration for production environment"
                            }
                        }
                    }
                },
                "tags": [
                    "Integrations"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Shell",
                        "label": "Curl",
                        "source": "curl --location 'https://api.dev.chainwide.io/api/integrations/create_integration_type_1' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer your-api-key' \\\n--data '{\n    \"client_id\": \"3MVG9JJwBBbcN47I2GmNC_sfzj2HZ2ONbM7TXOyn57clgpu_I2HzNdbK4wMOZLiYwdIMjeGRzyGkzm94APp4u\",\n    \"client_secret\": \"72377C5EA11E3800E3FB68D537C0D1D500EE7290EC97116B2CF924E6A07B0D62\",\n    \"provider\": \"salesforce\",\n    \"tenant_id\": \"11507a0e2f5e\",\n    \"integration_name\": \"Production Salesforce\",\n    \"integration_description\": \"Main Salesforce integration for production environment\"\n}'"
                    },
                    {
                        "lang": "Python",
                        "source": "import requests\nimport json\n\nurl = \"https://api.dev.chainwide.io/api/integrations/create_integration_type_1\"\n\npayload = {\n    \"client_id\": \"3MVG9JJwBBbcN47I2GmNC_sfzj2HZ2ONbM7TXOyn57clgpu_I2HzNdbK4wMOZLiYwdIMjeGRzyGkzm94APp4u\",\n    \"client_secret\": \"72377C5EA11E3800E3FB68D537C0D1D500EE7290EC97116B2CF924E6A07B0D62\",\n    \"provider\": \"salesforce\",\n    \"tenant_id\": \"11507a0e2f5e\",\n    \"integration_name\": \"Production Salesforce\",\n    \"integration_description\": \"Main Salesforce integration for production environment\"\n}\n\nheaders = {\n    'Content-Type': 'application/json',\n    'Authorization': 'Bearer your-api-key'\n}\n\nresponse = requests.post(url, headers=headers, json=payload)\nprint(response.json())"
                    }
                ]
            }
        },
		"/api/integrations/confirm_integration_type_1": {
			"post": {
				"security": [
					{
						"bearerAuth": []
					}
        		],
				"summary": "Confirm Type 1 Integration",
				"description": "❗ This API endpoint is not available for direct confirmation. Please use the Chainwide Dashboard to confirm your integration. Visit your integration details page on the dashboard to complete the confirmation process.",
				"deprecated": true,
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"integration_id": {
										"type": "string",
										"description": "The ID of the integration to confirm."
									},
									"client_id": {
										"type": "string",
										"description": "OAuth client ID for the integration."
									},
									"client_secret": {
										"type": "string",
										"description": "OAuth client secret for the integration."
									},
									"provider": {
										"type": "string",
										"description": "The integration provider name.",
										"enum": ["salesforce"]
									},
									"tenant_id": {
										"type": "string",
										"description": "Your tenant identifier."
									},
									"nango_integration_id": {
										"type": "string",
										"description": "The Nango integration ID."
									},
									"nango_connection_id": {
										"type": "string",
										"description": "The Nango connection ID."
									},
									"integration_name": {
										"type": "string",
										"description": "Name of the integration."
									},
									"integration_description": {
										"type": "string",
										"description": "Description of the integration."
									}
								},
								"required": [
									"integration_id",
									"client_id",
									"client_secret",
									"provider",
									"tenant_id",
									"nango_integration_id",
									"nango_connection_id",
									"integration_name"
								]
							},
							"example": {
								"integration_id": "integration123",
								"client_id": "your_client_id",
								"client_secret": "your_client_secret",
								"provider": "salesforce",
								"tenant_id": "tenant123",
								"nango_integration_id": "nango_integration123",
								"nango_connection_id": "nango_connection123",
								"integration_name": "Production Salesforce",
								"integration_description": "Main Salesforce integration for production environment"
							}
						}
					}
				},
				"tags": [
					"Integrations"
				],
				"x-codeSamples": [
					{
						"lang": "Shell",
						"label": "Curl",
						"source": "# ❗ Please use the Chainwide Dashboard to confirm integrations\n\ncurl --location 'https://api.dev.chainwide.io/api/integrations/confirm_integration_type_1' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer your-api-key' \\\n--data '{\n    \"integration_id\": \"integration123\",\n    \"client_id\": \"your_client_id\",\n    \"client_secret\": \"your_client_secret\",\n    \"provider\": \"salesforce\",\n    \"tenant_id\": \"tenant123\",\n    \"nango_integration_id\": \"nango_integration123\",\n    \"nango_connection_id\": \"nango_connection123\",\n    \"integration_name\": \"Production Salesforce\",\n    \"integration_description\": \"Main Salesforce integration for production environment\"\n}'"
					},
					{
						"lang": "Python",
						"source": "# ❗ Please use the Chainwide Dashboard to confirm integrations\n\nimport requests\nimport json\n\nurl = \"https://api.dev.chainwide.io/api/integrations/confirm_integration_type_1\"\n\npayload = {\n    \"integration_id\": \"integration123\",\n    \"client_id\": \"your_client_id\",\n    \"client_secret\": \"your_client_secret\",\n    \"provider\": \"salesforce\",\n    \"tenant_id\": \"tenant123\",\n    \"nango_integration_id\": \"nango_integration123\",\n    \"nango_connection_id\": \"nango_connection123\",\n    \"integration_name\": \"Production Salesforce\",\n    \"integration_description\": \"Main Salesforce integration for production environment\"\n}\n\nheaders = {\n    'Content-Type': 'application/json',\n    'Authorization': 'Bearer your-api-key'\n}\n\n# Note: This endpoint is not available for direct API access.\n# Please use the Chainwide Dashboard to confirm your integration.\n\nresponse = requests.post(url, headers=headers, json=payload)\nprint(response.json())"
					}
				]
			}
		},
		"/api/integrations/create_integration_type_2": {
			"post": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"summary": "Create Type 2 Integration with File Upload",
				"description": "Creates a new integration of type 2 with file uploads. Multiple files can be uploaded simultaneously.",
				"requestBody": {
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"type": "object",
								"properties": {
									"files": {
										"type": "array",
										"items": {
											"type": "string",
											"format": "binary"
										},
										"description": "Multiple files can be uploaded. Supported file types: PDF, etc."
									},
									"tenant_id": {
										"type": "string",
										"description": "Your unique tenant identifier."
									},
									"name": {
										"type": "string",
										"description": "Name of the integration."
									},
									"description": {
										"type": "string",
										"description": "Description of the integration."
									}
								},
								"required": [
									"files",
									"tenant_id",
									"name"
								]
							},
							"example": {
								"tenant_id": "11507a0e2f5e",
								"description": "Salesforce Faqs Description",
								"name": "Salesforce Faqs"
							}
						}
					}
				},
				"tags": [
					"Integrations"
				],
				"x-codeSamples": [
					{
						"lang": "Shell",
						"label": "Curl",
						"source": "# Example uploading multiple files\ncurl --location 'https://api.dev.chainwide.io/api/integrations/create_integration_type_2' \\\n--header 'Authorization: Bearer your-api-key' \\\n--header 'Accept: application/json' \\\n--form 'files=@\"/path/to/first/file.pdf\"' \\\n--form 'files=@\"/path/to/second/file.pdf\"' \\\n--form 'tenant_id=\"11507a0e2f5e\"' \\\n--form 'description=\"Salesforce Faqs Description\"' \\\n--form 'name=\"Salesforce Faqs\"'"
					},
					{
						"lang": "Python",
						"source": "import requests\n\nurl = \"https://api.dev.chainwide.io/api/integrations/create_integration_type_2\"\n\n# Prepare the files\nfiles = [\n    ('files', ('file1.pdf', open('/path/to/first/file.pdf', 'rb'), 'application/pdf')),\n    ('files', ('file2.pdf', open('/path/to/second/file.pdf', 'rb'), 'application/pdf'))\n]\n\n# Prepare the form data\ndata = {\n    'tenant_id': '11507a0e2f5e',\n    'description': 'Salesforce Faqs Description',\n    'name': 'Salesforce Faqs'\n}\n\nheaders = {\n    'Accept': 'application/json',\n    'Authorization': 'Bearer your-api-key'\n}\n\nresponse = requests.post(url, headers=headers, data=data, files=files)\nprint(response.json())\n\n# Don't forget to close the files\nfor _, (_, file_obj, _) in files:\n    file_obj.close()"
					}
				]
			}
		},
		"/api/integrations/view_integration/tenant_id": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"summary": "View Integrations by Tenant ID",
				"description": "Retrieves all integrations associated with a specific tenant ID.",
				"parameters": [
					{
						"name": "tenant_id",
						"in": "query",
						"required": true,
						"description": "The unique identifier of the tenant whose integrations you want to view",
						"schema": {
							"type": "string"
						},
						"example": "11507a0e2f5e"
					}
				],
				"tags": [
					"Integrations"
				],
				"x-codeSamples": [
					{
						"lang": "Shell",
						"label": "Curl",
						"source": "curl --location 'https://api.dev.chainwide.io/api/integrations/view_integration/tenant_id?tenant_id=11507a0e2f5e' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer your-api-key'"
					},
					{
						"lang": "Python",
						"source": "import requests\n\nurl = \"https://api.dev.chainwide.io/api/integrations/view_integration/tenant_id\"\n\nparams = {\n    'tenant_id': '11507a0e2f5e'\n}\n\nheaders = {\n    'Content-Type': 'application/json',\n    'Authorization': 'Bearer your-api-key'\n}\n\nresponse = requests.get(url, headers=headers, params=params)\nprint(response.json())"
					}
				]
			}
		},
		"/api/integrations/view_integration/integration_id": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"summary": "View Integration by Integration ID",
				"description": "Retrieves details of a specific integration using its unique integration ID.",
				"parameters": [
					{
						"name": "integration_id",
						"in": "query",
						"required": true,
						"description": "The unique identifier of the specific integration",
						"schema": {
							"type": "string",
							"format": "uuid"
						},
						"example": "5e473d2d-f714-4033-87ca-2f4485243de0"
					}
				],
				"tags": [
					"Integrations"
				],
				"x-codeSamples": [
					{
						"lang": "Shell",
						"label": "Curl",
						"source": "curl --location 'https://api.dev.chainwide.io/api/integrations/view_integration/integration_id?integration_id=5e473d2d-f714-4033-87ca-2f4485243de0' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer your-api-key'"
					},
					{
						"lang": "Python",
						"source": "import requests\n\nurl = \"https://api.dev.chainwide.io/api/integrations/view_integration/integration_id\"\n\nparams = {\n    'integration_id': '5e473d2d-f714-4033-87ca-2f4485243de0'\n}\n\nheaders = {\n    'Content-Type': 'application/json',\n    'Authorization': 'Bearer your-api-key'\n}\n\nresponse = requests.get(url, headers=headers, params=params)\nprint(response.json())"
					}
				]
			}
		},
		"/api/integrations/delete_integration": {
			"delete": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"summary": "Delete Integration",
				"description": "Deletes a specific integration using tenant ID and integration ID combination.",
				"parameters": [
					{
						"name": "tenant_id",
						"in": "query",
						"required": true,
						"description": "The unique identifier of the tenant",
						"schema": {
							"type": "string"
						},
						"example": "11507a0e2f5e"
					},
					{
						"name": "integration_id",
						"in": "query",
						"required": true,
						"description": "The unique identifier of the integration to be deleted",
						"schema": {
							"type": "string",
							"format": "uuid"
						},
						"example": "951c7443-7ad4-4ed2-a7cb-8fc1a8f26e4e"
					}
				],
				"tags": [
					"Integrations"
				],
				"x-codeSamples": [
					{
						"lang": "Shell",
						"label": "Curl",
						"source": "curl --location --request DELETE 'https://api.dev.chainwide.io/api/integrations/delete_integration?tenant_id=11507a0e2f5e&integration_id=951c7443-7ad4-4ed2-a7cb-8fc1a8f26e4e' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer your-api-key'"
					},
					{
						"lang": "Python",
						"source": "import requests\n\nurl = \"https://api.dev.chainwide.io/api/integrations/delete_integration\"\n\nparams = {\n    'tenant_id': '11507a0e2f5e',\n    'integration_id': '951c7443-7ad4-4ed2-a7cb-8fc1a8f26e4e'\n}\n\nheaders = {\n    'Content-Type': 'application/json',\n    'Authorization': 'Bearer your-api-key'\n}\n\nresponse = requests.delete(url, headers=headers, params=params)\nprint(response.json())"
					}
				]
			}
		},
		"/api/integrations/refresh_integration": {
			"post": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"summary": "Refresh Integration",
				"description": "Refreshes the authentication tokens or status of a specific integration.",
				"parameters": [
					{
						"name": "integration_id",
						"in": "query",
						"required": true,
						"description": "The unique identifier of the integration to be refreshed",
						"schema": {
							"type": "string",
							"format": "uuid"
						},
						"example": "951c7443-7ad4-4ed2-a7cb-8fc1a8f26e4e"
					}
				],
				"tags": [
					"Integrations"
				],
				"x-codeSamples": [
					{
						"lang": "Shell",
						"label": "Curl",
						"source": "curl --location --request POST 'https://api.dev.chainwide.io/api/integrations/refresh_integration?integration_id=951c7443-7ad4-4ed2-a7cb-8fc1a8f26e4e' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer your-api-key' \\\n--data ''"
					},
					{
						"lang": "Python",
						"source": "import requests\n\nurl = \"https://api.dev.chainwide.io/api/integrations/refresh_integration\"\n\nparams = {\n    'integration_id': '951c7443-7ad4-4ed2-a7cb-8fc1a8f26e4e'\n}\n\nheaders = {\n    'Content-Type': 'application/json',\n    'Authorization': 'Bearer your-api-key'\n}\n\nresponse = requests.post(url, headers=headers, params=params, json={})\nprint(response.json())"
					}
				]
			}
		},
		"/api/integrations/sync_data_from_integration": {
			"post": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"summary": "Sync Data From Integration",
				"description": "Initiates a data synchronization process for the specified integration.",
				"parameters": [
					{
						"name": "integration_id",
						"in": "query",
						"required": true,
						"description": "The unique identifier of the integration to sync data from",
						"schema": {
							"type": "string",
							"format": "uuid"
						},
						"example": "f7e0f7ce-cbff-432d-bec8-d40a1f4c8e74"
					}
				],
				"tags": [
					"Integrations"
				],
				"x-codeSamples": [
					{
						"lang": "Shell",
						"label": "Curl",
						"source": "curl --location --request POST 'https://api.dev.chainwide.io/api/integrations/sync_data_from_integration?integration_id=f7e0f7ce-cbff-432d-bec8-d40a1f4c8e74' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer your-api-key' \\\n--data ''"
					},
					{
						"lang": "Python",
						"source": "import requests\n\nurl = \"https://api.dev.chainwide.io/api/integrations/sync_data_from_integration\"\n\nparams = {\n    'integration_id': 'f7e0f7ce-cbff-432d-bec8-d40a1f4c8e74'\n}\n\nheaders = {\n    'Content-Type': 'application/json',\n    'Authorization': 'Bearer your-api-key'\n}\n\nresponse = requests.post(url, headers=headers, params=params, json={})\nprint(response.json())"
					}
				]
			}
		},
		"/api/integrations/check_unique_integration_name": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"summary": "Check Unique Integration Name",
				"description": "Verifies if the provided integration name is unique and available for use.",
				"parameters": [
					{
						"name": "integration_name",
						"in": "query",
						"required": true,
						"description": "The integration name to check for uniqueness",
						"schema": {
							"type": "string"
						},
						"example": "user can put any name"
					}
				],
				"tags": [
					"Integrations"
				],
				"x-codeSamples": [
					{
						"lang": "Shell",
						"label": "Curl",
						"source": "curl --location 'https://api.dev.chainwide.io/api/integrations/check_unique_integration_name?integration_name=user%20can%20put%20any%20name' \\\n--header 'Authorization: Bearer your-api-key'"
					},
					{
						"lang": "Python",
						"source": "import requests\n\nurl = \"https://api.dev.chainwide.io/api/integrations/check_unique_integration_name\"\n\nparams = {\n    'integration_name': 'user can put any name'\n}\n\nheaders = {\n    'Authorization': 'Bearer your-api-key'\n}\n\nresponse = requests.get(url, headers=headers, params=params)\nprint(response.json())"
					}
				]
			}
		},
		"/api/connections/create_connection": {
			"post": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"summary": "Create Connection",
				"description": "Creates a new connection with specified LLM model and RAG configurations.",
				"tags": [
					"Connections"
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"connection_name": {
										"type": "string",
										"description": "Name of the connection"
									},
									"connection_description": {
										"type": "string",
										"description": "Description of the connection"
									},
									"tenant_id": {
										"type": "string",
										"description": "Unique identifier for the tenant"
									},
									"llm_model_config": {
										"type": "object",
										"properties": {
											"model_provider": {
												"type": "string",
												"description": "Provider of the LLM model",
												"enum": ["openai"]
											},
											"model_name": {
												"type": "string",
												"description": "Name of the LLM model",
												"enum": ["gpt-4o", "gpt-4o-mini"]
											},
											"temperature": {
												"type": "number",
												"description": "Temperature parameter for the model (Optional)",
												"default": 0.7
											},
											"max_tokens": {
												"type": "integer",
												"description": "Maximum tokens for model response (Optional)",
												"default": 2000
											},
											"top_p": {
												"type": "number",
												"description": "Top p parameter (Optional)",
												"default": 1.0
											},
											"frequency_penalty": {
												"type": "number",
												"description": "Frequency penalty parameter (Optional)",
												"default": 0
											},
											"presence_penalty": {
												"type": "number",
												"description": "Presence penalty parameter (Optional)",
												"default": 0
											}
										},
										"required": ["model_provider", "model_name"]
									},
									"rag_config": {
										"type": "object",
										"properties": {
											"agent_type": {
												"type": "string",
												"description": "Type of the agent",
												"enum": ["customer_service_agent", "salesforce_agent"]
											},
											"integration_ids": {
												"type": "array",
												"items": {
													"type": "string",
													"format": "uuid"
												},
												"description": "Array of integration IDs"
											},
											"system_prompt": {
												"type": "string",
												"description": "System prompt for the agent (Optional)"
											},
											"level1_prompt": {
												"type": "string",
												"description": "Level 1 prompt for the agent (Optional)"
											},
											"level2_prompt": {
												"type": "string",
												"description": "Level 2 prompt for the agent (Optional)"
											}
										},
										"required": ["agent_type", "integration_ids"]
									}
								},
								"required": [
									"connection_name",
									"tenant_id",
									"llm_model_config",
									"rag_config"
								]
							},
							"example": {
								"connection_name": "Salesforce Customer Service",
								"connection_description": "Salesforce FAQs",
								"tenant_id": "11507a0e2f5e",
								"llm_model_config": {
									"model_provider": "openai",
									"model_name": "gpt-4o"
								},
								"rag_config": {
									"agent_type": "customer_service_agent",
									"integration_ids": ["6a9f24c8-0d4e-4d42-a8f4-61783deb9faa"]
								}
							}
						}
					}
				},
				"x-codeSamples": [
					{
						"lang": "Shell",
						"label": "Curl",
						"source": "curl --location 'https://api.dev.chainwide.io/api/connections/create_connection' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer your-api-key' \\\n--data '{\n    \"connection_name\": \"Salesforce Customer Service\",\n    \"connection_description\": \"Salesforce FAQs\",\n    \"tenant_id\": \"11507a0e2f5e\",\n    \"llm_model_config\": {\n        \"model_provider\": \"openai\",\n        \"model_name\": \"gpt-4o\"\n    },\n    \"rag_config\": {\n        \"agent_type\": \"customer_service_agent\",\n        \"integration_ids\": [\"6a9f24c8-0d4e-4d42-a8f4-61783deb9faa\"]\n    }\n}'"
					},
					{
						"lang": "Python",
						"source": "import requests\nimport json\n\nurl = \"https://api.dev.chainwide.io/api/connections/create_connection\"\n\npayload = {\n    \"connection_name\": \"Salesforce Customer Service\",\n    \"connection_description\": \"Salesforce FAQs\",\n    \"tenant_id\": \"11507a0e2f5e\",\n    \"llm_model_config\": {\n        \"model_provider\": \"openai\",\n        \"model_name\": \"gpt-4o\"\n    },\n    \"rag_config\": {\n        \"agent_type\": \"customer_service_agent\",\n        \"integration_ids\": [\"6a9f24c8-0d4e-4d42-a8f4-61783deb9faa\"]\n    }\n}\n\nheaders = {\n    'Content-Type': 'application/json',\n    'Authorization': 'Bearer your-api-key'\n}\n\nresponse = requests.post(url, headers=headers, json=payload)\nprint(response.json())"
					}
				]
			}
		},
		"/api/connections/get_all_connections": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"summary": "Get All Connections",
				"description": "Retrieves all connections associated with a specific tenant ID.",
				"parameters": [
					{
						"name": "tenant_id",
						"in": "query",
						"required": true,
						"description": "The unique identifier of the tenant whose connections you want to retrieve",
						"schema": {
							"type": "string"
						},
						"example": "11507a0e2f5e"
					}
				],
				"tags": [
					"Connections"
				],
				"x-codeSamples": [
					{
						"lang": "Shell",
						"label": "Curl",
						"source": "curl --location 'https://api.dev.chainwide.io/api/connections/get_all_connections?tenant_id=11507a0e2f5e' \\\n--header 'Authorization: Bearer your-api-key'"
					},
					{
						"lang": "Python",
						"source": "import requests\n\nurl = \"https://api.dev.chainwide.io/api/connections/get_all_connections\"\n\nparams = {\n    'tenant_id': '11507a0e2f5e'\n}\n\nheaders = {\n    'Authorization': 'Bearer your-api-key'\n}\n\nresponse = requests.get(url, headers=headers, params=params)\nprint(response.json())"
					}
				]
			}
		},
		"/api/connections/get_connection": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"summary": "Get Connection",
				"description": "Retrieves details of a specific connection using its unique connection ID.",
				"parameters": [
					{
						"name": "connection_id",
						"in": "query",
						"required": true,
						"description": "The unique identifier of the connection to retrieve",
						"schema": {
							"type": "string",
							"format": "uuid"
						},
						"example": "e11c58b1-10f5-4e25-9d06-b9d3424d88c4"
					}
				],
				"tags": [
					"Connections"
				],
				"x-codeSamples": [
					{
						"lang": "Shell",
						"label": "Curl",
						"source": "curl --location 'https://api.dev.chainwide.io/api/connections/get_connection?connection_id=e11c58b1-10f5-4e25-9d06-b9d3424d88c4' \\\n--header 'Authorization: Bearer your-api-key'"
					},
					{
						"lang": "Python",
						"source": "import requests\n\nurl = \"https://api.dev.chainwide.io/api/connections/get_connection\"\n\nparams = {\n    'connection_id': 'e11c58b1-10f5-4e25-9d06-b9d3424d88c4'\n}\n\nheaders = {\n    'Authorization': 'Bearer your-api-key'\n}\n\nresponse = requests.get(url, headers=headers, params=params)\nprint(response.json())"
					}
				]
			}
		},
		"/api/connections/delete_connection": {
			"delete": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"summary": "Delete Connection",
				"description": "Deletes a specific connection using connection ID and tenant ID combination.",
				"parameters": [
					{
						"name": "connection_id",
						"in": "query",
						"required": true,
						"description": "The unique identifier of the connection to be deleted",
						"schema": {
							"type": "string",
							"format": "uuid"
						},
						"example": "e11c58b1-10f5-4e25-9d06-b9d3424d88c4"
					},
					{
						"name": "tenant_id",
						"in": "query",
						"required": true,
						"description": "The unique identifier of the tenant",
						"schema": {
							"type": "string"
						},
						"example": "11507a0e2f5e"
					}
				],
				"tags": [
					"Connections"
				],
				"x-codeSamples": [
					{
						"lang": "Shell",
						"label": "Curl",
						"source": "curl --location --request DELETE 'https://api.dev.chainwide.io/api/connections/delete_connection?connection_id=e11c58b1-10f5-4e25-9d06-b9d3424d88c4&tenant_id=11507a0e2f5e' \\\n--header 'Authorization: Bearer your-api-key'"
					},
					{
						"lang": "Python",
						"source": "import requests\n\nurl = \"https://api.dev.chainwide.io/api/connections/delete_connection\"\n\nparams = {\n    'connection_id': 'e11c58b1-10f5-4e25-9d06-b9d3424d88c4',\n    'tenant_id': '11507a0e2f5e'\n}\n\nheaders = {\n    'Authorization': 'Bearer your-api-key'\n}\n\nresponse = requests.delete(url, headers=headers, params=params)\nprint(response.json())"
					}
				]
			}
		},
		"/api/connections/check_unique_connection_name": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"summary": "Check Unique Connection Name",
				"description": "Verifies if the provided connection name is unique and available for use.",
				"parameters": [
					{
						"name": "connection_name",
						"in": "query",
						"required": true,
						"description": "The connection name to check for uniqueness",
						"schema": {
							"type": "string"
						},
						"example": "Salesforce Customer Service"
					}
				],
				"tags": [
					"Connections"
				],
				"x-codeSamples": [
					{
						"lang": "Shell",
						"label": "Curl",
						"source": "curl --location 'https://api.dev.chainwide.io/api/connections/check_unique_connection_name?connection_name=Salesforce%20Customer%20Service' \\\n--header 'Authorization: Bearer your-api-key'"
					},
					{
						"lang": "Python",
						"source": "import requests\n\nurl = \"https://api.dev.chainwide.io/api/connections/check_unique_connection_name\"\n\nparams = {\n    'connection_name': 'Salesforce Customer Service'\n}\n\nheaders = {\n    'Authorization': 'Bearer your-api-key'\n}\n\nresponse = requests.get(url, headers=headers, params=params)\nprint(response.json())"
					}
				]
			}
		},
		"/api/rag/chat_completion": {
			"post": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"summary": "Chat Completion",
				"description": "Generates chat completions using RAG (Retrieval-Augmented Generation) with specified connection.",
				"tags": [
					"Rag Agents"
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"connection_id": {
										"type": "string",
										"format": "uuid",
										"description": "The unique identifier of the connection"
									},
									"chat_id": {
										"type": "string",
										"format": "uuid",
										"description": "Unique identifier for the chat session"
									},
									"message": {
										"type": "string",
										"description": "The user's message or query"
									}
								},
								"required": [
									"connection_id",
									"message"
								]
							},
							"example": {
								"connection_id": "5d8cc43c-182a-4ab8-9abd-d714164fa288",
								"message": "Do you know about salesforce genie"
							}
						}
					}
				},
				"x-codeSamples": [
					{
						"lang": "Shell",
						"label": "Curl",
						"source": "curl --location 'https://api.dev.chainwide.io/api/rag/chat_completion' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer your-api-key' \\\n--data '{\n    \"connection_id\": \"5d8cc43c-182a-4ab8-9abd-d714164fa288\",\n    \"stream\": false,\n    \"chat_id\": \"482fb626-c652-4e69-8371-a3576fa26a6a\",\n    \"message\": \"Do you know about salesforce genie\"\n}'"
					},
					{
						"lang": "Python",
						"source": "import requests\nimport json\n\nurl = \"https://api.dev.chainwide.io/api/rag/chat_completion\"\n\npayload = {\n    \"connection_id\": \"5d8cc43c-182a-4ab8-9abd-d714164fa288\",\n    \"stream\": False,\n    \"chat_id\": \"482fb626-c652-4e69-8371-a3576fa26a6a\",\n    \"message\": \"Do you know about salesforce genie\"\n}\n\nheaders = {\n    'Content-Type': 'application/json',\n    'Authorization': 'Bearer your-api-key'\n}\n\nresponse = requests.post(url, headers=headers, json=payload)\nprint(response.json())"
					}
				]
			}
		},
		"/api/rag/chat_history": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"summary": "Get Chat History",
				"description": "Retrieves the chat history for a specific tenant.",
				"parameters": [
					{
						"name": "tenant_id",
						"in": "query",
						"required": true,
						"description": "The unique identifier of the tenant whose chat history you want to retrieve",
						"schema": {
							"type": "string"
						},
						"example": "11507a0e2f5e"
					}
				],
				"tags": [
					"Rag Agents"
				],
				"x-codeSamples": [
					{
						"lang": "Shell",
						"label": "Curl",
						"source": "curl --location 'https://api.dev.chainwide.io/api/rag/chat_history?tenant_id=11507a0e2f5e' \\\n--header 'Accept: application/json' \\\n--header 'Authorization: Bearer your-api-key'"
					},
					{
						"lang": "Python",
						"source": "import requests\n\nurl = \"https://api.dev.chainwide.io/api/rag/chat_history\"\n\nparams = {\n    'tenant_id': '11507a0e2f5e'\n}\n\nheaders = {\n    'Accept': 'application/json',\n    'Authorization': 'Bearer your-api-key'\n}\n\nresponse = requests.get(url, headers=headers, params=params)\nprint(response.json())"
					}
				]
			}
		},
		"/api/rag/chat/{chat_id}": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"summary": "Get Specific Chat",
				"description": "Retrieves the details and messages of a specific chat using its chat ID.",
				"parameters": [
					{
						"name": "chat_id",
						"in": "path",
						"required": true,
						"description": "The unique identifier of the chat to retrieve",
						"schema": {
							"type": "string",
							"format": "uuid"
						},
						"example": "482fb626-c652-4e69-8371-a3576fa26a6a"
					}
				],
				"tags": [
					"Rag Agents"
				],
				"x-codeSamples": [
					{
						"lang": "Shell",
						"label": "Curl",
						"source": "curl --location 'https://api.dev.chainwide.io/api/rag/chat/482fb626-c652-4e69-8371-a3576fa26a6a' \\\n--header 'Accept: application/json' \\\n--header 'Authorization: Bearer your-api-key'"
					},
					{
						"lang": "Python",
						"source": "import requests\n\nchat_id = '482fb626-c652-4e69-8371-a3576fa26a6a'\nurl = f\"https://api.dev.chainwide.io/api/rag/chat/{chat_id}\"\n\nheaders = {\n    'Accept': 'application/json',\n    'Authorization': 'Bearer your-api-key'\n}\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())"
					}
				]
			}
		},
		"/api/rag/create_chat": {
			"get": {
				"security": [
					{
						"bearerAuth": []
					}
				],
				"summary": "Create New Chat",
				"description": "Creates a new chat session for a specific connection.",
				"parameters": [
					{
						"name": "connection_id",
						"in": "query",
						"required": true,
						"description": "The unique identifier of the connection to create a chat for",
						"schema": {
							"type": "string",
							"format": "uuid"
						},
						"example": "70ed5297-8aac-45eb-b2dc-4bebedc918e8"
					}
				],
				"tags": [
					"Rag Agents"
				],
				"x-codeSamples": [
					{
						"lang": "Shell",
						"label": "Curl",
						"source": "curl --location 'https://api.dev.chainwide.io/api/rag/create_chat?connection_id=70ed5297-8aac-45eb-b2dc-4bebedc918e8' \\\n--header 'Accept: application/json' \\\n--header 'Authorization: Bearer your-api-key'"
					},
					{
						"lang": "Python",
						"source": "import requests\n\nurl = \"https://api.dev.chainwide.io/api/rag/create_chat\"\n\nparams = {\n    'connection_id': '70ed5297-8aac-45eb-b2dc-4bebedc918e8'\n}\n\nheaders = {\n    'Accept': 'application/json',\n    'Authorization': 'Bearer your-api-key'\n}\n\nresponse = requests.get(url, headers=headers, params=params)\nprint(response.json())"
					}
				]
			}
		}
	},
	"tags": [
    {
        "name": "Integrations",
        "description": "Endpoints for managing data source integrations. These endpoints allow you to connect, configure, and manage various data sources (like Salesforce, document uploads) that will serve as knowledge bases for your RAG agents. Use these endpoints to create new integrations, verify their status, sync data, and manage existing integrations."
    },
    {
        "name": "Connections",
        "description": "Endpoints for configuring and managing RAG implementations. These endpoints enable you to build customized RAG setups by combining your integrated data sources with specific LLM configurations. Use these endpoints to create new RAG connections, manage existing ones, and configure parameters like model selection, agent type, and knowledge base combinations."
    },
    {
        "name": "Rag Agents",
        "description": "Endpoints for interacting with your configured RAG agents. These endpoints provide chat functionality, allowing you to send queries, receive AI-generated responses enhanced with your integrated knowledge bases, manage chat sessions, and retrieve chat history. Use these endpoints to facilitate real-time interactions with your RAG-powered AI assistants."
    }
]
}